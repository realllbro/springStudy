<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
        
	<!-- context:component-scan 을 사용(메모리 적재)하게 되면 package 하위로 다 뒤지기 때문에 annotation-config 따로 사용할 필요 없음 
	     context:component-scan 기능에 포함되어 있다.
	<context:annotation-config />
	 -->
	<context:component-scan base-package="com.newlecture.web.controller"></context:component-scan>        
    
    <!-- http://localhost:8080/resource/images/logo.png -->
    <!-- 요청이 들어온 정적파일 image, html, css 파일들을 스프링에서 접근 가능하게 태그 -->
    <!--<mvc:resources location="/resource/" mapping="/resource/**"></mvc:resources>-->
	<mvc:resources location="/static/" mapping="/**"></mvc:resources>    
	
	<!-- annotation url 맵핑 요청(@RequestMapping("/index"))을 수발 할 수 있도록 하는 역할  -->
    <mvc:annotation-driven></mvc:annotation-driven>

	<!-- index url 요청시 실행 -->
	<!--annotation 으로 IOC DI 변경 
    <bean id="/index" class="com.newlecture.web.controller.IndexController"></bean> 
    -->
    
    <bean id="/notice/list" class="com.newlecture.web.controller.notice.ListController">
    	<!-- 작성예시 : name은 setter를 기준으로, ref service bean은 service-context.xml 파일에 작성되어 있음 -->
    	<!-- annotation 으로 변경하면서 주석 처리  
    	<property name="noticeService" ref="noticeService"></property>
    	-->  
    </bean>
    
    <bean id="/notice/detail" class="com.newlecture.web.controller.notice.DetailController">  
    </bean>        

	<!-- view 페이지 맵핑을 도와주는 리졸브 -->    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="prefix" value="/WEB-INF/view/"></property>
    	<property name="suffix" value=".jsp"></property>
    	<property name="order" value="2"></property>
    </bean>
    
    <!-- tiles를 이용하기 위한 view 리졸버 -->
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    	<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"></property>
    	<property name="order" value="1"></property>
    </bean>
    
    <!-- tiles 작업지시서 (UrlBasedViewResolver가 tiles 작업지시서를 참조한다 )-->
    <bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    	<property name="definitions" value="/WEB-INF/tiles.xml"></property>
    </bean>
 </beans>